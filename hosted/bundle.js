(()=>{var e={867:e=>{let t,n,o=!1;const a=e=>{const t={};return t.x=e.pageX-e.target.offsetLeft,t.y=e.pageY-e.target.offsetTop,t},i=e=>{o=!0;const t=a(e);n.beginPath(),n.moveTo(t.x,t.y),n.lineTo(t.x,t.y),n.stroke()},r=e=>{if(!o)return!1;const t=a(e);return n.lineTo(t.x,t.y),n.stroke(),!0},s=()=>{o=!1,n.closePath()},c=()=>{o=!1,n.closePath()};e.exports={init:()=>(t=document.querySelector("#drawingBoard"),!!(t.getContext&&t.getContext("2d")&&t.toDataURL&&t.toDataURL())&&(n=t.getContext("2d"),t.onmousedown=i,t.onmousemove=r,t.onmouseup=s,t.onmouseout=c,n.lineWidth=3,n.strokeStyle="black",n.lineCap="round",n.lineJoin="round",!0)),setPenColor:e=>{n.strokeStyle=e},toDataURL:()=>t.toDataURL(),drawImage:async e=>{const t=await(e=>new Promise(((t,n)=>{const o=new Image;o.crossOrigin="Anonymous",o.src=e,o.onload=()=>{t(o)},o.onerror=e=>{n(e)}})))(e);n.drawImage(t,0,0)},clear:()=>{const e=n.fillStyle;n.fillStyle="white",n.fillRect(0,0,t.width,t.height),n.fillStyle=e}}}},t={};function n(o){var a=t[o];if(void 0!==a)return a.exports;var i=t[o]={exports:{}};return e[o](i,i.exports,n),i.exports}(()=>{const e=n(867);let t={},o={};const a=(e,t)=>{const n=t||(e=>e),o={};for(let t=0;t<e.length;t++){const a=e[t];o[a]=document.querySelector(`#${n(a)}`)}return o},i=e=>{t[e]&&Object.keys(t).forEach((n=>{t[n].classList.toggle("activeScreen",n===e)}))},r=async e=>{try{return await e.json()}catch(e){return}},s=async(e,t)=>{const n=await fetch(`/getGame?code=${e}`,{method:"get",headers:{Accept:"application/json"}}),o=await r(n)||{};return 200===n.status&&o.state===t?o:new Promise((n=>{setTimeout((()=>n(s(e,t))),1e3)}))},c=async(t,n,a,r)=>{const l=a===r;o.whyAmIWaiting.innerHTML="Waiting for the other player to make a scribble...",o.whatAmIDrawing.innerHTML="Make a scribble!",e.clear(),o.finalScribble.classList.remove("finalDrawingActive"),o.finalExpension.classList.add("finalDrawingActive"),o.finalScribbleOrExpension.checked=!0,o.playAgainCheckbox.checked=!1,o.submitDrawingButton.onclick=async()=>{const a=e.toDataURL();await fetch(`/submitDrawing?code=${t}&round=${n}&which=${l?"scribble":"expension"}`,{method:"post",headers:{Accept:"application/json","Content-Type":"image/png"},body:a}),l&&(o.whyAmIWaiting.innerHTML="Waiting for the other player to make an exPENsion of your scribble...",i("waiting"),await s(t,3)),o.finalScribble.src=`/getDrawing?code=${t}&round=${n}&which=scribble`,o.finalExpension.src=`/getDrawing?code=${t}&round=${n}&which=expension`,i("done");const d=await s(t,1);c(t,d.round,d.player1Scribbles,r)},o.playAgainCheckbox.onclick=e=>{fetch(`/readyForNextRound?code=${t}&ready=${e.target.checked?"yes":"no"}&player=${r?"player1":"player2"}`,{method:"post"})},i(l?"drawing":"waiting"),l||(await s(t,2),await e.drawImage(`/getDrawing?code=${t}&round=${n}&which=scribble`),o.whatAmIDrawing.innerHTML="It's exPENsion time! Turn this scribble into a coherent drawing!",i("drawing"))};window.onload=()=>{t=a(["start","displayCode","inputCode","waiting","drawing","done","noCanvas"],(e=>`${e}Screen`)),o=a(["newGameButton","newGameError","joinGameButton","codeDisplay","codeInput","submitJoinCodeButton","joinError","whyAmIWaiting","whatAmIDrawing","submitDrawingButton","finalScribble","finalExpension","finalScribbleOrExpension","playAgainCheckbox"]),e.init()||i("noCanvas");const n=async()=>{o.newGameButton.disabled=!0;const e=await fetch("/newGame",{method:"post",headers:{Accept:"application/json"}}),t=await r(e);if(t)if(201===e.status){const{code:e}=t;o.codeDisplay.innerHTML=e,i("displayCode");const{player1Scribbles:n}=await s(e,1);c(e,0,n,!0)}else o.newGameButton.disabled=!1,o.newGameError.innerHTML=t.message;else n()};o.newGameButton.onclick=n,o.joinGameButton.onclick=()=>{i("inputCode")};const l=async()=>{o.submitJoinCodeButton.disabled=!0,o.codeInput.disabled=!0;const e=o.codeInput.value.toUpperCase(),t=await fetch(`/joinGame?code=${e}`,{method:"post",headers:{Accept:"application/json"}}),n=await r(t);if(n)if(200===t.status){const{player1Scribbles:t}=n;c(e,0,t,!1)}else o.submitJoinCodeButton.disabled=!1,o.codeInput.disabled=!1,o.joinError.innerHTML=n.message;else l()};o.submitJoinCodeButton.onclick=l,o.codeInput.onkeypress=e=>{"Enter"===(e.code||e.key)&&l()},o.finalScribbleOrExpension.onclick=e=>{const t=e.target.checked;o.finalScribble.classList[t?"remove":"add"]("finalDrawingActive"),o.finalExpension.classList[t?"add":"remove"]("finalDrawingActive")}}})()})();