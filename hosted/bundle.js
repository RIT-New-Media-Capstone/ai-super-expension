(()=>{var e={867:e=>{let t,o,n=!1;const a=e=>{const t={};return t.x=e.pageX-e.target.offsetLeft,t.y=e.pageY-e.target.offsetTop,t},i=e=>{n=!0;const t=a(e);o.beginPath(),o.moveTo(t.x,t.y)},r=e=>{if(!n)return!1;const t=a(e);return o.lineTo(t.x,t.y),o.stroke(),!0},s=()=>{n=!1,o.closePath()},c=()=>{n=!1,o.closePath()};e.exports={init:()=>(t=document.querySelector("#drawingBoard"),!!(t.getContext&&t.getContext("2d")&&t.toDataURL&&t.toDataURL())&&(o=t.getContext("2d"),t.onmousedown=i,t.onmousemove=r,t.onmouseup=s,t.onmouseout=c,o.lineWidth=3,o.strokeStyle="black",o.lineCap="round",o.lineJoin="round",!0)),setPenColor:e=>{o.strokeStyle=e},toDataURL:()=>t.toDataURL(),drawImage:async e=>{const t=await(e=>new Promise(((t,o)=>{const n=new Image;n.crossOrigin="Anonymous",n.src=e,n.onload=()=>{t(n)},n.onerror=e=>{o(e)}})))(e);o.drawImage(t,0,0)},clear:()=>{o.clearRect(0,0,t.width,t.height)}}}},t={};function o(n){var a=t[n];if(void 0!==a)return a.exports;var i=t[n]={exports:{}};return e[n](i,i.exports,o),i.exports}(()=>{const e=o(867);let t={},n={};const a=(e,t)=>{const o=t||(e=>e),n={};for(let t=0;t<e.length;t++){const a=e[t];n[a]=document.querySelector(`#${o(a)}`)}return n},i=e=>{t[e]&&Object.keys(t).forEach((o=>{t[o].classList.toggle("activeScreen",o===e)}))},r=async(e,t)=>{const o=await fetch(`/getGame?code=${e}`,{method:"get",headers:{Accept:"application/json"}}),n=await o.json();return 200===o.status&&n.state===t?n:new Promise((o=>{setTimeout((()=>o(r(e,t))),1e3)}))},s=async(t,o,a)=>{const c=o===a;n.whyAmIWaiting.innerHTML="Waiting for the other player to make a scribble...",n.whatAmIDrawing.innerHTML="Make a scribble!",e.clear(),n.playAgainCheckbox.checked=!1,n.submitDrawingButton.onclick=async()=>{const o=e.toDataURL();await fetch(`/submitDrawing?code=${t}`,{method:"post",headers:{Accept:"application/json","Content-Type":"image/png"},body:o}),c?(n.whyAmIWaiting.innerHTML="Waiting for the other player to exPENd your scribble...",i("waiting"),await r(t,3),n.finalDrawing.src=`/getDrawing?code=${t}`):n.finalDrawing.src=o,i("done");const d=await r(t,1);s(t,d.player1Scribbles,a)},n.playAgainCheckbox.onclick=e=>{fetch(`/readyForNextRound?code=${t}&ready=${e.target.checked?"yes":"no"}&player=${a?"player1":"player2"}`,{method:"post"})},i(c?"drawing":"waiting"),c||(await r(t,2),await e.drawImage(`/getDrawing?code=${t}`),n.whatAmIDrawing.innerHTML="It's exPENsion time! Turn this scribble into a coherent drawing!",i("drawing"))};window.onload=()=>{t=a(["start","displayCode","inputCode","waiting","drawing","done","noCanvas"],(e=>`${e}Screen`)),n=a(["newGameButton","joinGameButton","codeDisplay","codeInput","submitJoinCodeButton","joinError","whyAmIWaiting","whatAmIDrawing","submitDrawingButton","finalDrawing","playAgainCheckbox"]),e.init()||i("noCanvas"),n.newGameButton.onclick=async()=>{n.newGameButton.disabled=!0;const e=await fetch("/newGame",{method:"post",headers:{Accept:"application/json"}}),t=await e.json();if(201===e.status){const{code:e}=t;n.codeDisplay.innerHTML=`Tell Player 2 to join with code: ${e}`,i("displayCode");const{player1Scribbles:o}=await r(e,1);s(e,o,!0)}else n.newGameButton.disabled=!1,n.codeDisplay.innerHTML=t.message},n.joinGameButton.onclick=()=>{i("inputCode")};const o=async()=>{n.submitJoinCodeButton.disabled=!0,n.codeInput.disabled=!0;const e=n.codeInput.value.toUpperCase(),t=await fetch(`/joinGame?code=${e}`,{method:"post",headers:{Accept:"application/json"}}),o=await t.json();if(200===t.status){const{player1Scribbles:t}=o;s(e,t,!1)}else n.submitJoinCodeButton.disabled=!1,n.codeInput.disabled=!1,n.joinError.innerHTML=o.message};n.submitJoinCodeButton.onclick=o,n.codeInput.onkeypress=e=>{"Enter"===(e.code||e.key)&&o()}}})()})();